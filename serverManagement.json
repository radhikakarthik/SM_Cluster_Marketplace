{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "apiVersions": {
      "type": "object",
      "metadata": {
        "description": "Object with all relevant API versions passed from the mainTemplate"
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "Location for the deployment"
      }
    },
    "adminUserName": {
      "type": "string",
      "metadata": {
        "description": "Username for administrator"
      }
    },
    "smSiteID": {
      "type": "securestring",
      "metadata": {
        "description": "Server management siteID"
      }
    },
    "smPassword": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Password for administrator SM"
      }
    },
    "smSshPublicKey": {
      "type": "string",
      "metadata": {
        "description": "SSH public key that will be included on all nodes in the cluster. The OpenSSH public key can be generated with tools like ssh-keygen on Linux or OS X."
      }
    },
    "smAuthenticationType": {
      "type": "string",
      "metadata": {
        "description": "Authentication type for the virtual machines"
      }
    },
    "smAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for SM Admin User"
      }
    },
    "smRESTPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for SM REST API"
      }
    },
    "smSystemCount": {
      "type": "int",
      "metadata": {
        "description": "The number of virtual machines instances to provision"
      }
    },
    "smSystemPrefix": {
      "type": "string",
      "metadata": {
        "description": "Cluster name consisting of 2-10 lowercase letters and numbers"
      }
    },
    "smVMSize": {
      "type": "string",
      "metadata": {
        "description": "Server Management VM size"
      }
    },
    "subnet1SMID": {
      "type": "string",
      "metadata": {
        "description": "Server management subnetID"
      }
    },
    "smSubnetStartAddress": {
      "type": "string",
      "metadata": {
        "description": "Server Management subnet start address"
      }
    },
    "vmSubnetAddressSpace": {
      "type": "string",
      "metadata": {
        "description": "Address space of the VM subnet"
      }
    },
    "sourceAddressSpace": {
      "type": "string",
      "metadata": {
        "description": "CIDR block defining acceptable address range for remote SSH access"
      }
    },
    "imagePublisher": {
      "type": "string",
      "metadata": {
        "description": "Image publisher"
      }
    },
    "imageOffer": {
      "type": "string",
      "metadata": {
        "description": "Image offer name"
      }
    },
    "imageSku": {
      "type": "string",
      "metadata": {
        "description": "Image Sku name"
      }
    },
    "teradataTags": {
      "type": "object",
      "metadata": {
        "description": "Tags for teradata resources"
      }
    },
    "imageStorageAccountType": {
      "type": "string",
      "metadata": {
        "description": "Storage Account type for OS vhd"
      }
    }
  },
  "variables": {
    "nic1": "[concat(parameters('smSystemPrefix'),'-','nic1')]",
    "vm": "[concat(parameters('smSystemPrefix'),'-','vm')]",
    "clusterAvailabilitySetSettings": {
      "name": "[concat(parameters('smSystemPrefix'),'-as')]",
      "faultDomainCount": "3",
      "updateDomainCount": "20"
    },
    "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
    "linuxConfiguration_sshPublicKey": {
      "disablePasswordAuthentication": "true",
      "ssh": {
        "publicKeys": [
          {
            "path": "[variables('sshKeyPath')]",
            "keyData": "[parameters('smSshPublicKey')]"
          }
        ]
      }
    },
    "vhdsContainer": "vhds",
    "linuxConfiguration_password": {},
    "linuxConfiguration": "[variables(concat('linuxConfiguration_',parameters('smAuthenticationType')))]",
    "dataStoreStorageAccountArray": [
      "[concat(uniqueString('s',parameters('smSystemPrefix'),resourceGroup().id,'0'),'0')]",
      "[concat(uniqueString('s',parameters('smSystemPrefix'),resourceGroup().id,'1'),'1')]",
      "[concat(uniqueString('s',parameters('smSystemPrefix'),resourceGroup().id,'2'),'2')]",
      "[concat(uniqueString('s',parameters('smSystemPrefix'),resourceGroup().id,'3'),'3')]",
      "[concat(uniqueString('s',parameters('smSystemPrefix'),resourceGroup().id,'4'),'4')]",
      "[concat(uniqueString('s',parameters('smSystemPrefix'),resourceGroup().id,'5'),'5')]",
      "[concat(uniqueString('s',parameters('smSystemPrefix'),resourceGroup().id,'6'),'6')]",
      "[concat(uniqueString('s',parameters('smSystemPrefix'),resourceGroup().id,'7'),'7')]",
      "[concat(uniqueString('s',parameters('smSystemPrefix'),resourceGroup().id,'8'),'8')]",
      "[concat(uniqueString('s',parameters('smSystemPrefix'),resourceGroup().id,'9'),'9')]",
      "[concat(uniqueString('s',parameters('smSystemPrefix'),resourceGroup().id,'10'),'10')]",
      "[concat(uniqueString('s',parameters('smSystemPrefix'),resourceGroup().id,'11'),'11')]",
      "[concat(uniqueString('s',parameters('smSystemPrefix'),resourceGroup().id,'12'),'12')]",
      "[concat(uniqueString('s',parameters('smSystemPrefix'),resourceGroup().id,'13'),'13')]",
      "[concat(uniqueString('s',parameters('smSystemPrefix'),resourceGroup().id,'14'),'14')]",
      "[concat(uniqueString('s',parameters('smSystemPrefix'),resourceGroup().id,'15'),'15')]",
      "[concat(uniqueString('s',parameters('smSystemPrefix'),resourceGroup().id,'16'),'16')]",
      "[concat(uniqueString('s',parameters('smSystemPrefix'),resourceGroup().id,'17'),'17')]",
      "[concat(uniqueString('s',parameters('smSystemPrefix'),resourceGroup().id,'18'),'18')]",
      "[concat(uniqueString('s',parameters('smSystemPrefix'),resourceGroup().id,'19'),'19')]",
      "[concat(uniqueString('s',parameters('smSystemPrefix'),resourceGroup().id,'20'),'20')]",
      "[concat(uniqueString('s',parameters('smSystemPrefix'),resourceGroup().id,'21'),'21')]",
      "[concat(uniqueString('s',parameters('smSystemPrefix'),resourceGroup().id,'22'),'22')]",
      "[concat(uniqueString('s',parameters('smSystemPrefix'),resourceGroup().id,'23'),'23')]",
      "[concat(uniqueString('s',parameters('smSystemPrefix'),resourceGroup().id,'24'),'24')]",
      "[concat(uniqueString('s',parameters('smSystemPrefix'),resourceGroup().id,'25'),'25')]",
      "[concat(uniqueString('s',parameters('smSystemPrefix'),resourceGroup().id,'26'),'26')]",
      "[concat(uniqueString('s',parameters('smSystemPrefix'),resourceGroup().id,'27'),'27')]",
      "[concat(uniqueString('s',parameters('smSystemPrefix'),resourceGroup().id,'28'),'28')]",
      "[concat(uniqueString('s',parameters('smSystemPrefix'),resourceGroup().id,'29'),'29')]",
      "[concat(uniqueString('s',parameters('smSystemPrefix'),resourceGroup().id,'30'),'30')]",
      "[concat(uniqueString('s',parameters('smSystemPrefix'),resourceGroup().id,'31'),'31')]",
      "[concat(uniqueString('s',parameters('smSystemPrefix'),resourceGroup().id,'32'),'32')]",
      "[concat(uniqueString('s',parameters('smSystemPrefix'),resourceGroup().id,'33'),'33')]"
    ],
    "dataStoreStorageAccountCount": "[add(div(parameters('smSystemCount'),4),1)]",
    "publicIPAddressName": "[concat(parameters('smSystemPrefix'),'-','publicip')]",
    "publicIPAddressDomainNameLabel": "[concat(parameters('smSystemPrefix'),'-',uniqueString(resourceGroup().id))]",
    "diagnosticsStorageAccount": "[concat('smdig',uniqueString(resourceGroup().id,'d'))]",
    "publicIPAddressType": "Static",
    "s1": "[split(parameters('smSubnetStartAddress'),'.')]",
    "nsgName": "sm-nsg"
  },
  "resources": [
    {
      "apiVersion": "[parameters('apiversions').compute.availabilitySets]",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('clusterAvailabilitySetSettings').name]",
      "location": "[parameters('location')]",
      "tags": {
        "provider": "[toUpper(parameters('teradataTags').provider)]"
      },
      "properties": {
        "platformFaultDomainCount": "[variables('clusterAvailabilitySetSettings').faultDomainCount]",
        "platformUpdateDomainCount": "[variables('clusterAvailabilitySetSettings').updateDomainCount]"
      }
    },
    {
      "apiVersion": "[parameters('apiVersions').storage.storageAccounts]",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('diagnosticsStorageAccount')]",
      "location": "[parameters('location')]",
      "tags": {
        "provider": "[toUpper(parameters('teradataTags').provider)]"
      },
      "kind": "Storage",
      "sku": {
        "name": "Standard_LRS"
      },
      "properties": {}
    },
    {
      "apiVersion": "[parameters('apiVersions').storage.storageAccounts]",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat('os',variables('dataStoreStorageAccountArray')[copyIndex()])]",
      "location": "[parameters('location')]",
      "kind": "Storage",
      "tags": {
        "provider": "[toUpper(parameters('teradataTags').provider)]"
      },
      "copy": {
        "name": "osStorageAccountsCopy",
        "count": "[variables('dataStoreStorageAccountCount')]"
      },
      "sku": {
        "name": "[parameters('imageStorageAccountType')]"
      },
      "properties": {}
    },
    {
      "apiVersion": "[parameters('apiVersions').network.networkSecurityGroups]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsgname')]",
      "location": "[parameters('location')]",
      "tags": {
        "provider": "[toUpper(parameters('teradataTags').provider)]"
      },
      "properties": {
        "securityRules": [
          {
            "name": "Allow_Remote_SSH",
            "properties": {
              "description": "Allow Remote SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "[parameters('sourceAddressSpace')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "Allow_Local_SSH",
            "properties": {
              "description": "Allow Local SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "[parameters('vmSubnetAddressSpace')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          },
          {
            "name": "Allow_REST_HTTP",
            "properties": {
              "description": "Allow REST http Service",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "1080",
              "sourceAddressPrefix": "[parameters('vmSubnetAddressSpace')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 102,
              "direction": "Inbound"
            }
          },
          {
            "name": "Allow_REST_HTTPS",
            "properties": {
              "description": "Allow REST https Service",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "1443",
              "sourceAddressPrefix": "[parameters('vmSubnetAddressSpace')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 103,
              "direction": "Inbound"
            }
          },
          {
            "name": "Allow_CMIC_UDP_HB",
            "properties": {
              "description": "Allow CMIC UDP HB",
              "protocol": "UDP",
              "sourcePortRange": "*",
              "destinationPortRange": "5598-5599",
              "sourceAddressPrefix": "[parameters('vmSubnetAddressSpace')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 104,
              "direction": "Inbound"
            }
          },          
          {
            "name": "Allow_CMIC_TCP_HB",
            "properties": {
              "description": "Allow CMIC TCP HB",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "5599",
              "sourceAddressPrefix": "[parameters('vmSubnetAddressSpace')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 105,
              "direction": "Inbound"
            }
          },
          {
            "name": "Allow_CIM",
            "properties": {
              "description": "Allow CIM",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "5988",
              "sourceAddressPrefix": "[parameters('vmSubnetAddressSpace')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 106,
              "direction": "Inbound"
            }
          },                 
          {
            "name": "Allow_FTU",
            "properties": {
              "description": "Allow FTU",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "5999",
              "sourceAddressPrefix": "[parameters('vmSubnetAddressSpace')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 107,
              "direction": "Inbound"
            }
          },       
          {
            "name": "Allow_JAVA_proxy",
            "properties": {
              "description": "Allow JAVA proxy Service",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "7755",
              "sourceAddressPrefix": "[parameters('vmSubnetAddressSpace')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 108,
              "direction": "Inbound"
            }
          },
          {
            "name": "Allow_JAVA_RMI",
            "properties": {
              "description": "Allow JAVA RMI",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "7757-7758",
              "sourceAddressPrefix": "[parameters('vmSubnetAddressSpace')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 109,
              "direction": "Inbound"
            }
          },
          {
            "name": "Allow_SOV_Ping",
            "properties": {
              "description": "Allow SOV UDP Ping ",
              "protocol": "UDP",
              "sourcePortRange": "*",
              "destinationPortRange": "7759",
              "sourceAddressPrefix": "[parameters('vmSubnetAddressSpace')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 110,
              "direction": "Inbound"
            }
          },
          {
            "name": "Allow_SERF_UDP_GOSSIP",
            "properties": {
              "description": "Allow SERF UDP gossip",
              "protocol": "UDP",
              "sourcePortRange": "*",
              "destinationPortRange": "7946",
              "sourceAddressPrefix": "[parameters('vmSubnetAddressSpace')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 111,
              "direction": "Inbound"
            }
          },    
          {
            "name": "Allow_SERF_TCP_GOSSIP",
            "properties": {
              "description": "Allow SERF TCP gossip",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "7946",
              "sourceAddressPrefix": "[parameters('vmSubnetAddressSpace')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 112,
              "direction": "Inbound"
            }
          },  
          {
            "name": "Allow_CMIC_Web",
            "properties": {
              "description": "Allow CMIC Web Service",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "9981",
              "sourceAddressPrefix": "[parameters('vmSubnetAddressSpace')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 113,
              "direction": "Inbound"
            }
          },
          {
            "name": "Allow_JMS",
            "properties": {
              "description": "Allow JMS Service",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "61618",
              "sourceAddressPrefix": "[parameters('vmSubnetAddressSpace')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 114,
              "direction": "Inbound"
            }
          },
          {
            "name": "Allow_NTP",
            "properties": {
              "description": "Allow NTP Service",
              "protocol": "UDP",
              "sourcePortRange": "*",
              "destinationPortRange": "123",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 115,
              "direction": "Inbound"
            }
          }
        ]
      }
    },    
    {
      "apiVersion": "[parameters('apiVersions').network.publicIPAddresses]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('publicIPAddressName'),copyIndex())]",
      "location": "[parameters('location')]",
      "tags": {
        "provider": "[toUpper(parameters('teradataTags').provider)]"
      },
      "copy": {
        "name": "publicIPCopy",
        "count": "[parameters('smSystemCount')]"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[concat(variables('publicIPAddressDomainNameLabel'),copyIndex())]"
        },
        "idleTimeoutInMinutes": 30
      }
    },

    {
      "apiVersion": "[parameters('apiVersions').network.networkInterfaces]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nic1'),copyIndex())]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "publicIPCopy",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"
      ],
      "copy": {
        "name": "nics1Copy",
        "count": "[parameters('smSystemCount')]"
      },
      "tags": {
        "provider": "[toUpper(parameters('teradataTags').provider)]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ip1",
            "properties": {
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgname'))]"
              },
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(variables('s1')[0], '.', variables('s1')[1], '.', add(int(variables('s1')[2]), div(add(int(variables('s1')[3]),copyIndex()),256)), '.', mod(add(int(variables('s1')[3]),copyIndex()),256))]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('publicIPAddressName'),copyIndex()))]"
              },
              "subnet": {
                "id": "[parameters('subnet1SMID')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[parameters('apiVersions').compute.virtualMachines]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vm'),copyIndex())]",
      "location": "[parameters('location')]",
      "plan": {
        "name": "[parameters('imageSku')]",
        "product": "[parameters('imageOffer')]",
        "publisher": "[parameters('imagePublisher')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/availabilitySets/', variables('clusterAvailabilitySetSettings').name)]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('diagnosticsStorageAccount'))]",
        "[concat('Microsoft.Storage/storageAccounts/','os',variables('dataStoreStorageAccountArray')[mod(copyIndex(),variables('dataStoreStorageAccountCount'))])]",
        "[concat('Microsoft.Network/networkInterfaces/', concat(variables('nic1'),copyIndex()))]"
      ],
      "copy": {
        "name": "vmsCopy",
        "count": "[parameters('smSystemCount')]"
      },
      "tags": {
        "provider": "[toUpper(parameters('teradataTags').provider)]"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('clusterAvailabilitySetSettings').name)]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('smVmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('vm'),copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('smPassword')]",
          "linuxConfiguration": "[variables('linuxConfiguration')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSku')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/','os',variables('dataStoreStorageAccountArray')[mod(copyIndex(),variables('dataStoreStorageAccountCount'))]), '2016-05-01').primaryEndpoints.blob,variables('vhdsContainer'),'/',variables('dataStoreStorageAccountArray')[mod(copyIndex(),variables('dataStoreStorageAccountCount'))],parameters('smSystemPrefix'),copyIndex(),'-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('http://',variables('diagnosticsStorageAccount'),'.blob.core.windows.net')]"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nic1'),copyIndex()))]",
              "properties": {
                "primary": true
              }
            }
          ]
        }
      }
    },
    {
      "apiVersion": "[parameters('apiVersions').compute.virtualMachineExtensions]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(concat(variables('vm'),copyIndex()), '/init')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "vmsCopy"
      ],
      "copy": {
        "name": "initExtensionsCopy",
        "count": "[parameters('smSystemCount')]"
      },
      "tags": {
        "provider": "[toUpper(parameters('teradataTags').provider)]"
      },
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "settings": {
          "fileUris": []
        },
        "protectedSettings": {
          "commandToExecute": "[concat('/opt/teradata/cmic/bin/cmic-cloud-config -B',' ',parameters('smSubnetStartAddress'),' -C ',parameters('smSystemCount'),' -p ',parameters('smAdminPassword'),' -P ',parameters('smRESTPassword'),' -S ',parameters('smsiteID'))]"
        }
      }
    }
  ],
  "outputs": {
    "primarySMNode": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses','sm-publicip0'),parameters('apiVersions').network.publicIPAddresses).dnsSettings.fqdn]",
      "metadata": {
        "description": "SSH to the primary Server Management node and run 'cmic-cloud-config' to configure"
      }
    }
  }
}